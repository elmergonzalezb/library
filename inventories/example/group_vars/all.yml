---
# Example default configuration for Library nodes (by group).

# If you want you can assume the managed hosts are wholly dedicated to
# serving content from the Calibre server. To ensure that the most
# resources are used for the library software, flag that we'll remove
# unnecessary pacakges in order to free up more disk space.
#
# See the `unnecessary_packages` variable for a list of package names
# that will be removed.
uninstall_unnecessary_packages: false

# Lists of packages deemed safe to remove, assuming a headless server
# is desired (i.e., `uninstall_unnecessary_packages` is `true`).
unnecessary_packages:
  # Package names that are the same regardless of the underlying OS.
  common:
    - "libreoffice"
    - "libreoffice-gtk"
    - "tree"

    # Don't use a star glob for these, in case they're not installed.
    - "wolfram-engine"
    - "wolframscript"

  debian:
    - "alacarte"
    - "alsa-utils"
    - "ant"
    - "aptitude*"
    - "at"
    - "bluej"
    - "bsd-mailx"
    - "bsdmainutils"
    - "cifs-utils"
    - "chromium"
    - "claws-mail"
    - "crda" # Unnecessary unless your server is connected via Wi-Fi (not recommended anyway)
    - "dblatex"
    - "debian-reference-en"
    - "desktop-base"
    - "epiphany-browser"
    - "exim4*"
    - "geany"
    - "greenfoot"
    - "gtk2-engines"
    - "java-common"
    - "lightdm"
    - "lxde"
    - "lxtask"
    - "nano"
    - "nodejs"
    - "nodered"
    - "penguinspuzzle"
    - "piclone"
    - "pigpio"
    - "scratch"
    - "sonic-pi"
    - "timidity"
    - "xpdf"

  # TODO: List unnecessary packages on RedHat-based OS's.
  redhat:

# By default we'll assume that libraries should have security-hardened
# configurations. Set this to `false` if you prefer to skip hardening.
hardened_hosts: true

# When hardening hosts (with `hardened_hosts` set to `true`), we won't
# allow SSH connections from any user not in this specific user group.
sshd_allow_group: ssh-users

# Whether or not to install a Tor server and to provision any Onion
# services on the managed host.
tor_onion_service_server: true

# Root folder where backup copies of Onion service secrets are stored.
#tor_onion_services_backup_dir: "{{ lookup('env', 'HOME') }}/onion-service-backups"

# Encryption password to use when enciphering Onion service secrets.
# This should itself be an encrypted value. This was generated using:
#
#     openssl rand -base64 48 | ansible-vault encrypt_string --vault-id @prompt
#
# For this example the password is `password`. YOU SHOULD CHANGE THIS.
tor_onion_services_backup_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          39326463366565346536366663346565346361353031633630613664373363353038396638666461
          6532303136313130613030616364323438386264306433350a343165346138663465616363316334
          61386330336566643730626130666537313232343932343132393732613264356663613434613635
          3330303335343935310a316565336633336662393564383132366131313732323337333237373361
          33646434396632336335626232376238323831386262363735396364383735373661626238306165
          64303964653766373339306662386439336139653235316631303261303130343432306638353362
          35366234373131323039616536653263313231656465623462343636373038373666313231366334
          66346232373238346662

# Ansible Vault ID to label encrypted Onion service secrets with.
# This makes it possible to use a separate passphrase for your Onion
# service secrets than for other secrets in your playbooks.
#tor_onion_services_backup_vault_id: "tor-backup"

# Define the Onion services you want available on the managed host.
# None of these will be added unless the `tor_onion_service_server`
# variable is `true`.
onion_services:

  # This Onion service is used primarily for NAT punching.
  - name: onion-ssh # The name of the Onion service directory.
    version: 2      # The Onion service protocol.
    virtports:      # The virtual port(s) to expose on the Onion.
      - port_number: 22        # The Onion's port number itself.
        target_addr: 127.0.0.1 # The target address of the service.
        target_port: 22        # The target port of the service.
    auth_type: stealth         # The Onion's authentication type. This
                               # can be `stealth`, `basic` or `false`.
    clients:        # A list of clients to authenticate.
      - admin

  # This Onion service makes the Calibre library available as an
  # authenticated stealth Onion service to "alice" and "bob".
  - name: onion-library
    version: 2
    virtports:
      - port_number: 80
        target_addr: 127.0.0.1
        target_port: 8080
    auth_type: stealth
    clients:
      - alice
      - bob

# Landing page variables.
web_landing_page_resources_dir: "all/public_html"

# Calibre server variables.
calibre_server_username: calibre
calibre_server_home_dir: "/srv/{{ calibre_server_username }}"
calibre_server_user_groups:
  - "{{ sshd_allow_group }}"

# If you have a custom Calibre Content server template, provide the
# name of its containing folder here.
#
# To use the example CalibreBootstrap alternate theme, you must first
# also initialize its submodule: `git submodule update --init`
#calibre_server_resources_files: CalibreBootstrap

calibre_libraries:
  - name: main
    library_dir: "{{ calibre_server_home_dir }}/Calibre Library"
    sync_source: "~/Documents/Calibre Library/" # Trailing slash for "contents of."
