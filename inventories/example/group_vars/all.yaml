# Example default configuration for Library nodes (by group).
---

# By default we'll assume that libraries should have security-hardened
# configurations. Set this to `false` if you prefer to skip hardening.
hardened_hosts: true

# When hardening hosts (with `hardened_hosts` set to `true`), we won't
# allow SSH connections from any user not in this specific user group.
sshd_allow_group: ssh

# Part of host hardening is the addition of an IP packet filtering
# firewall. By default, it has a bare minimum of ports open. We'll set
# it to open an additional port for multicast DNS (Avahi/ZeroConf).
iptables_open_ports:
  - protocol: udp
    destination_port: 5353

# Whether or not to install a Tor server and to provision any Onion
# services on the managed host.
tor_onion_service_server: true

# Whether or not to install an OnionShare receiving server. This is
# set to `false` by default, and should be changed to `true` only on
# a per-host basis. (You don't need an OnionShare server receiving
# files on each and every Library branch; you only need one, really.)
onionshare_receiver_mode: false

# Root folder where backup copies of Onion service secrets are stored.
#tor_onion_services_backup_dir: "{{ lookup('env', 'HOME') }}/onion-service-backups"

# Encryption password to use when enciphering Onion service secrets.
# This should itself be an encrypted value. This was generated using:
#
#     openssl rand -base64 48 | ansible-vault encrypt_string --vault-id @prompt
#
# For this example the password is `password`. YOU SHOULD CHANGE THIS.
tor_onion_services_backup_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          39326463366565346536366663346565346361353031633630613664373363353038396638666461
          6532303136313130613030616364323438386264306433350a343165346138663465616363316334
          61386330336566643730626130666537313232343932343132393732613264356663613434613635
          3330303335343935310a316565336633336662393564383132366131313732323337333237373361
          33646434396632336335626232376238323831386262363735396364383735373661626238306165
          64303964653766373339306662386439336139653235316631303261303130343432306638353362
          35366234373131323039616536653263313231656465623462343636373038373666313231366334
          66346232373238346662

# Ansible Vault ID to label encrypted Onion service secrets with.
# This makes it possible to use a separate passphrase for your Onion
# service secrets than for other secrets in your playbooks.
#tor_onion_services_backup_vault_id: "tor-backup"

# Enable the Vanguards high-security Tor Controller add-on script.
#tor_onion_services_vanguards:
#  version: "v0.2.2"
#  args:
#    #state: "/var/run/vanguards/vanguards.state"
#    config: "/etc/tor/vanguards.conf"
#    #control_ip: "{{ inventory_hostname }}"
#    #control_port: "{{ torrc.ControlPort.port }}"
#    #control_socket: "{{ torrc.ControlSocket }}"
#    #disable_vanguards: false
#    #disable_bandguards: true
#    enable_cbtverify: true
#  config:
#    control_pass: "{{ torrc.HashedControlPasswords[0] }}"

# Define the Onion services you want available on the managed host.
# None of these will be added unless the `tor_onion_service_server`
# variable is `true`.
onion_services:

  # This Onion service is used primarily for NAT punching.
  - name: onion-ssh # The name of the Onion service directory.
    version: 2      # The Onion service protocol version.
    virtports:      # The virtual port(s) to expose on the Onion.
      - port_number: 22        # The Onion's port number itself.
        target_addr: 127.0.0.1 # The target address of the service.
        target_port: 22        # The target port of the service.
    auth_type: stealth         # The Onion's authentication type. This
                               # can be `stealth`, `basic` or `false`.
    clients:        # A list of clients to authenticate.
      - admin

  # This Onion service makes the Calibre library available as an
  # authenticated stealth Onion service to "alice" and "bob".
  - name: onion-library
    virtports:
      - port_number: 80
        target_addr: 127.0.0.1
        target_port: 8080
    auth_type: stealth
    clients:
      - alice
      - bob

# Minimal Lighttpd configuration.
lighttpd_config:
  - server:
      modules:
        - mod_ssi
  - server:
      port: 80
  - server:
      username: "{{ lighttpd_server_username }}"
  - server:
      groupname: "{{ lighttpd_server_username }}"
  - server:
      document-root: "{{ lighttpd_server_home_dir }}/html"
  - server:
      tag: ""
  - index-file:
      names:
        - index.html
  - ssi:
      exec: "disable"
  - ssi:
      extension:
        - .html
        - .shtml

# Calibre role variable overrides.
calibre_server_username: calibre
calibre_server_home_dir: "/srv/{{ calibre_server_username }}"
calibre_server_user_groups:
  - "{{ sshd_allow_group }}"

# If you have a custom Calibre Content server template, provide the
# name of its containing folder here.
#
# To use the example CalibreBootstrap alternate theme, you must first
# also initialize its submodule: `git submodule update --init`
#calibre_server_resources_files: "CalibreBootstrap"

calibre_libraries:
  - name: main
    library_dir: "{{ calibre_server_home_dir }}/Calibre Library"
    sync_source: "~/Documents/Calibre Library/" # Trailing slash for "contents of."
    # Although the `calibre` role does not require `listen_port` to be
    # specified explicitly when there is only one Library defined, we
    # do so anyway so that the IP firewall can know what port to open.
    listen_port: 8080

# Landing page variables.
web_landing_page_resources_dir: "all/public_html"
