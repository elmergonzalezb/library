---
- name: Provision Library nodes with Dark Web access if requested.
  hosts: all
  become: true

  pre_tasks:
    - name: Register firewall configuration.
      import_tasks: tasks/configure-firewall.yml

    - name: Register custom Onion configuration.
      when:
        - onion_services is defined
        - onion_services_overrides is defined
      block:
        - name: Make list of overridden Onion services.
          include_tasks: tasks/configure-onions.yml
          loop: "{{ onion_services | product(onion_services_overrides) | list }}"
          loop_control:
            index_var: i
        - name: Reset Onion service configuration from overrides list.
          set_fact:
            onion_services: "{{ overridden_onion_services }}"

  roles:
    - common
    - calibre
    - lighttpd
    - role: tor
      when: tor_onion_service_server | default(false)

  tasks:
    - name: Install Calibre Content server resources.
      when: calibre_server_resources_files is defined
      copy:
        src: "{{ calibre_server_resources_files }}/content_server"
        dest: "{{ calibre_server_home_dir }}/.config/calibre/resources/"
        owner: "{{ calibre_server_username }}"
      notify: Restart Calibre.

    - name: Create Web landing page.
      when: web_landing_page_resources_dir is defined
      block:
        - name: Install Web landing page files.
          ignore_errors: true # It's possible we have no files to copy. :)
          synchronize:
            src: "files/{{ web_landing_page_resources_dir }}/"
            dest: /var/www/html/
            rsync_opts:
              - "--exclude=.git"
          # FIXME: Why does the `rsync` command always return changed?
          changed_when: false

        - name: Ensure Web landing page directory structure exists.
          when: item.state == "directory"
          file:
            path: "/var/www/html/{{ item.path }}"
            state: directory
          with_filetree: "templates/{{ web_landing_page_resources_dir }}"

        - name: Write Web landing page templates.
          when: item.state == "file"
          template:
            src: "{{ item.src }}"
            dest: "/var/www/html/{{ item.path }}"
          with_filetree: "templates/{{ web_landing_page_resources_dir }}"
