---
- name: Provision Library nodes with Dark Web access if requested.
  hosts: all
  become: true

  pre_tasks:
    - name: Determine firewall configuration for Calibre Libraries.
      when: calibre_libraries is defined
      block:
        - name: Get configured Calibre listen ports.
          set_fact:
            calibre_ports: "{{ calibre_libraries | selectattr('listen_port', 'defined') | map(attribute='listen_port') | list }}"

        - name: Register Calibre ports with iptables.
          set_fact:
            ipv4_tables: >
              {{ ipv4_tables | combine({
                'filter': {
                  'INPUT': {
                    'rules': ipv4_tables.filter.INPUT.rules + [{
                      'protocol': 'tcp',
                      'destination_port': item,
                      'target': 'ACCEPT'
                    }]
                  }
                }
              }, recursive=True) }}
          loop: "{{ calibre_ports }}"

  roles:
    - common
    - role: tor
      when:
        - tor_onion_service_server is defined
        - tor_onion_service_server
    - calibre
    - lighttpd

  tasks:
    - name: Install Calibre Content server resources.
      when:
        - calibre_server_resources_files is defined
        - calibre_server_resources_files
      copy:
        src: "{{ calibre_server_resources_files }}/content_server"
        dest: "{{ calibre_server_home_dir }}/.config/calibre/resources/"
        owner: "{{ calibre_server_username }}"
      notify: Restart Calibre.

    - name: Create Web landing page.
      when: web_landing_page_resources_dir is defined
      block:
        - name: Install Web landing page files.
          ignore_errors: true # It's possible we have no files to copy. :)
          synchronize:
            src: "files/{{ web_landing_page_resources_dir }}/"
            dest: /var/www/html/
            recursive: true
            rsync_opts:
              - "--exclude=.git"

        - name: Ensure Web landing page directory structure exists.
          when: item.state == "directory"
          file:
            path: "/var/www/html/{{ item.path }}"
            state: directory
          with_filetree: "templates/{{ web_landing_page_resources_dir }}"

        - name: Write Web landing page templates.
          when: item.state == "file"
          template:
            src: "{{ item.src }}"
            dest: "/var/www/html/{{ item.path }}"
          with_filetree: "templates/{{ web_landing_page_resources_dir }}"
